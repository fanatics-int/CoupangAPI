swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: inventory-api-controller
    description: Inventory Api Controller
  - name: item-controller
    description: Item Controller
  - name: order-api-controller
    description: Order Api Controller
  - name: price-api-controller
    description: Price Api Controller
  - name: product-api-controller
    description: Product Api Controller
paths:
  /api/v1/items:
    get:
      tags:
        - item-controller
      summary: getItemByUpc
      operationId: getItemByUpcUsingGET
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: upc
          in: query
          description: upc
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/v1/items/{sku}':
    get:
      tags:
        - item-controller
      summary: getItemBySku
      operationId: getItemBySkuUsingGET
      produces:
        - application/json;charset=UTF-8
      parameters:
        - name: sku
          in: path
          description: sku
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/v1/vendors/{vendor}/inventories':
    put:
      tags:
        - inventory-api-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: inventoryList
          description: inventoryList
          required: true
          schema:
            $ref: '#/definitions/InventoryList'
        - name: vendor
          in: path
          description: vendor
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/v1/vendors/{vendor}/orders/{orderId}/packages/{trackingNumber}':
    put:
      tags:
        - order-api-controller
      summary: orderTracking
      operationId: orderTrackingUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          type: string
        - in: body
          name: orderPackage
          description: orderPackage
          required: true
          schema:
            $ref: '#/definitions/OrderPackage'
        - name: trackingNumber
          in: path
          description: trackingNumber
          required: true
          type: string
        - name: vendor
          in: path
          description: vendor
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/v1/vendors/{vendor}/orders/{orderId}/status/':
    put:
      tags:
        - order-api-controller
      summary: orderStatus
      operationId: orderStatusUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          type: string
        - in: body
          name: orderStatus
          description: orderStatus
          required: true
          schema:
            $ref: '#/definitions/OrderStatus'
        - name: vendor
          in: path
          description: vendor
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/v1/vendors/{vendor}/prices':
    put:
      tags:
        - price-api-controller
      summary: update
      operationId: updateUsingPUT_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: pricelist
          description: pricelist
          required: true
          schema:
            $ref: '#/definitions/PriceList'
        - name: vendor
          in: path
          description: vendor
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Response'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/api/v1/vendors/{vendor}/products':
    post:
      tags:
        - product-api-controller
      summary: update
      operationId: updateUsingPOST_1
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: product
          description: product
          required: true
          schema:
            $ref: '#/definitions/Product'
        - name: vendor
          in: path
          description: vendor
          required: true
          type: string
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false
  '/api/v1/vendors/{vendor}/products/{productId}':
    delete:
      tags:
        - product-api-controller
      summary: delete
      operationId: deleteUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: productId
          in: path
          description: productId
          required: true
          type: string
        - name: vendor
          in: path
          description: vendor
          required: true
          type: string
      responses:
        '204':
          description: Product successfully deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Resources not found
        '500':
          description: Internal Server Error
      deprecated: false
definitions:
  Inventory:
    type: object
    properties:
      quantity:
        type: integer
        format: int32
    title: Inventory
  InventoryList:
    type: object
    properties:
      inventories:
        type: object
        additionalProperties:
          $ref: '#/definitions/Inventory'
    title: InventoryList
  Item:
    type: object
    properties:
      book:
        type: boolean
      classId:
        type: string
        enum:
          - GLASS
          - SHIPALONE
          - HEAT
          - DEFAULT
          - VALUE
          - BOOK
      dateLastModified:
        type: string
        format: date-time
      description:
        type: string
      expirationDateFlag:
        type: boolean
      glass:
        type: boolean
      heatSensitive:
        type: boolean
      highValue:
        type: boolean
      id:
        type: integer
        format: int64
      inactive:
        type: boolean
      itemUpcs:
        type: array
        items:
          $ref: '#/definitions/ItemUpc'
      jikguVendorId:
        type: string
      minShelfLife:
        type: integer
        format: int32
      photoRequired:
        type: boolean
      replenishmentCode:
        type: string
        enum:
          - ACTIVE
          - JIT_BT
          - JIT_ING
          - EU_JIKGU
          - INACTIVE_DISCONTINUED
          - INACTIVE_OTHER
          - INACTIVE_NO_VENDOR
          - INACTIVE_HEAT_SENSITIVE
          - INACTIVE_RESERVE_FOR_COUNTRY_EXPANSION
          - INACTIVE_MOQ
          - DO_NOT_BUY_LEGAL
          - DO_NOT_BUY_DUPLICATES
          - DO_NOT_BUY_NOT_FOR_RESALE
          - DO_NOT_BUY_WEIGHT_SIZE
          - DO_NOT_BUY_OTHER
          - DO_NOT_BUY_CAN_NOT_SHIP
          - DO_NOT_BUY_EXPIRATION_DATE_ISSUE
          - DO_NOT_BUY_TRANSITIONED_TO_NEW_SELL_QUANTITY
          - DO_NOT_BUY_BM_CHOICE_NOT_TO_ASSORT
          - REJECTED_FC
          - DO_NOT_BUY_BM_REVIEW
          - INACTIVE_SEASONAL
      shelfLife:
        type: integer
        format: int32
      sioc:
        type: boolean
      sku:
        type: string
      upc:
        type: string
      vendorItemId:
        type: string
      vendorSku:
        type: string
    title: Item
  ItemUpc:
    type: object
    properties:
      alternativeUpc:
        type: string
      id:
        type: integer
        format: int64
      item:
        $ref: '#/definitions/Item'
    title: ItemUpc
  OrderItem:
    type: object
    properties:
      itemId:
        type: string
      quantity:
        type: integer
        format: int32
    title: OrderItem
  OrderPackage:
    type: object
    properties:
      orderId:
        type: string
      packageLines:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
      trackingNumber:
        type: string
      trackingUrl:
        type: string
    title: OrderPackage
  OrderStatus:
    type: object
    properties:
      availableItems:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
      unavailableItems:
        type: array
        items:
          $ref: '#/definitions/OrderItem'
    title: OrderStatus
  Price:
    type: object
    properties:
      currency:
        type: string
        enum:
          - USD
          - KRW
          - TWD
      discountedPrice:
        type: number
        format: double
      msrp:
        type: number
        format: double
      standardPrice:
        type: number
        format: double
    title: Price
  PriceList:
    type: object
    properties:
      prices:
        type: object
        additionalProperties:
          $ref: '#/definitions/Price'
    title: PriceList
  Product:
    type: object
    required:
      - brand
      - category
      - country_of_origin
      - description
      - fabric_composition
      - items
      - main_image
      - product_id
      - status
      - title
      - vendor_partner
    properties:
      age_groups:
        type: array
        description: 'List of age groups: Baby, Toddler, Child, Adult'
        items:
          type: string
          enum:
            - Baby
            - Toddler
            - Child
            - Adult
      all_sizes:
        type: array
        description: All the created sizes for the product items
        items:
          type: string
      alternate_images:
        type: array
        description: Uris of an alternate product images
        items:
          type: string
      association:
        type: string
        description: Sports Association
      attributes:
        type: array
        description: Key Value pairs of attributes of the product
        items:
          $ref: '#/definitions/VendorAttribute'
      brand:
        type: string
        description: Brand of the product
      category:
        type: array
        description: Category of the product
        items:
          type: string
      color:
        type: string
        description: Color of the product
      country_of_origin:
        type: string
        description: The country the product was manufactured in
      description:
        type: string
        description: Description of the product
      fabric_composition:
        type: string
        description: Fabric material composition in percectages
      fulfillment_region:
        type: array
        description: 'Region the product will be fulfilled from [US/ EU]'
        items:
          type: string
          enum:
            - US
            - EU
      gender:
        type: string
        description: 'Female, Male, Unisex'
        enum:
          - Female
          - Male
          - Unisex
      items:
        type: array
        description: List of unique items. One item per SKU/Barcode
        items:
          $ref: '#/definitions/ProductItem'
      league:
        type: string
        description: Sports League
      main_image:
        type: string
        description: Uri of the main product image
      manufacture_date:
        type: string
        description: Manufacture date for the product in YYYY-MM-DD
      player_name:
        type: string
        description: Player Name
      product_id:
        type: string
        description: The product id
      search_keywords:
        type: string
        description: Search keywords for the product
      size_charts:
        type: array
        description: change
        items:
          $ref: '#/definitions/ProductSizeChart'
      status:
        type: string
        description: Status of a product
        enum:
          - Available
          - NonAvailable
          - Discontinued
      team:
        type: string
        description: Sports Team
      title:
        type: string
        description: The product title
      uk_commodity_code:
        type: string
        description: 'Used to classify any goods being imported or exported. https://www.gov.uk/trade-tariff'
      vendor_partner:
        type: string
        description: The vendor partner identifer
      washing_instructions:
        type: string
        description: Washing instructions for the product
    title: Product
  ProductItem:
    type: object
    required:
      - barcode
      - currency_code
      - height
      - item_id
      - length
      - msrp
      - sale_price
      - sku_id
      - weight
      - width
    properties:
      attributes:
        type: array
        description: Item attribute pairs
        items:
          $ref: '#/definitions/VendorAttribute'
      barcode:
        type: string
        description: Barcode id of the item
      currency_code:
        type: string
        description: 'ISO standard currency code used for the prices [USD, KRW, GBP]'
        enum:
          - USD
          - EUR
          - GBP
          - KRW
      height:
        type: number
        format: double
        description: Dimensions in mm
      item_id:
        type: string
        description: Unique id of the item
      length:
        type: number
        format: double
        description: Dimensions in mm
      msrp:
        type: number
        format: double
        description: MSRP of the item
      sale_price:
        type: number
        format: double
        description: Selling price of the item
      size:
        type: string
        description: Size of the item
      sku_id:
        type: string
        description: SKU id of the item
      weight:
        type: number
        format: double
        description: Dimensions in mm
      width:
        type: number
        format: double
        description: Dimensions in mm
    title: ProductItem
  ProductSizeChart:
    type: object
    properties:
      rows:
        type: array
        items:
          $ref: '#/definitions/ProductSizeChartRow'
      title:
        type: string
    title: ProductSizeChart
  ProductSizeChartRow:
    type: object
    properties:
      values:
        type: array
        items:
          type: string
    title: ProductSizeChartRow
  Response:
    type: object
    properties:
      success:
        type: boolean
    title: Response
  VendorAttribute:
    type: object
    properties:
      description:
        type: string
      value:
        type: string
    title: VendorAttribute